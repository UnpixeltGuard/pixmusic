name: Build latest docker image for JMusicBot

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * WED"
  release:
    types: [published]
    
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
     latest_release: ${{ steps.get_releases.latest_version }}
     previous_release: ${{ steps.get_releases.previous_version }}
    steps:
      - 
        name: Get latest 2 releases
        id: get_releases
        run: |
          latest_version=$(curl -s https://api.github.com/repos/jagrosh/musicbot/releases/latest | grep -o '"tag_name": *"[^"]*"' | head -n 1 | sed 's/"tag_name": *"//;s/"//')
          previous_version=$(curl -s https://api.github.com/repos/jagrosh/musicbot/releases | grep -o '"tag_name": *"[^"]*"' | sed -n '2p' | sed 's/"tag_name": *"//;s/"//')
          echo "{latest_version}={$latest_version}" >> $GITHUB_OUTPUT
          echo "{previous_version}={$previous_version}" >> $GITHUB_OUTPUT
      - 
        name: Checkout repository
        uses: actions/checkout@v4
        
      - 
        name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - 
        name: Build and Push Latest Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          build-args: |
           JMUSICBOT_VERSION=${{ outputs.latest_release }}
          tags: |
           pixelt/jmusicbot:latest
           pixelt/jmusicbot:${{ outputs.latest_release }}
      
      - 
        name: Build and Push Previous Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          build-args: |
            JMUSICBOT_VERSION=${{ outputs.previous_release }}
          tags: |
            pixelt/jmusicbot:${{ outputs.previous_release }}
